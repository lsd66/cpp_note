//////desc:别名做函数返回值
//#include<iostream>
//using namespace std;
////1.不要返回局部变量的引用
//int & test01() {
//	int a = 10;  //局部变量存放在四区中的栈区
//	return a; //返回a  这个函数返回的是a的引用
//}
//
////2.返回静态变量引用
////如果函数的返回值是引用，这个引用（函数的调用返回值)可以作为左值
//int & test02() {
//	static int a = 20;
//	return a;
//}
//int main() {
//	// 用引用接收函数返回的引用
//	int &ref = test01(); //返回值是引用,用引用接收
//	cout << "ref: " << ref << endl;  //输出引用的值,第一次正确,因为编译器做了保留
//	cout << "ref: " << ref << endl;  //第二次报错,因为a的内存已经释放
//
//	//如果函数返回值做左值，那么必须要返回引用
//	//因为返回值是引用，所以要用引用接收,这里初始化了，a的引用给&ref赋值。
//	//此时相当于int &ref=a的一个引用b,下面1000赋值这句话是修改指向的值
//	//下面两句话等价于 
//	/*  
//	int a = 10;
//	int &b = a;
//	int &ref = b; 相当于三个指向10
//	b = 1000; 
//	*/
//	int &ref2 = test02();
//	cout << "ref: " << ref2 << endl;
//	cout << "ref: " << ref2 << endl;
//
//	//如果函数的返回值是引用，这个引用（函数的调用返回值）可以作为左值
//	test02() = 1000;   //这是可以修改的，因为是修改指向的值
//	cout << "ref2: " << ref2 << endl;
//
//	return 0;
//}