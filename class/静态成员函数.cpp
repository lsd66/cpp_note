////desc:静态成员函数
//creator:  20210320
//#include<iostream>
//using namespace std;
//class Person {
//public:
//	//行为
//	//静态成员函数
//	//1.静态成员函数是所有对象共享的,内存中只有一份数据
//	static void func() {
//		m_a = 10; //2.静态成员函数可以修改静态成员变量，因为这个变量是所有对象共享的。
//		//m_b = 20; //静态成员函数不可以访问非静态成员变量，因为这个变量是属于特点的某个对象的，不是所有对象共享的。
//	}
//private:
//	static void func2() {
//		m_a = 20; //2.静态成员函数可以修改静态成员变量，因为这个变量是所有对象共享的。
//		//m_b = 20; //静态成员函数不可以访问非静态成员变量，因为这个变量是属于特点的某个对象的，不是所有对象共享的。
//	}
//	//属性
//	static int m_a;  //静态成员变量
//	int m_b;  //非静态成员变量
//	 
//};
////静态成员变量，类内声明，类外初始化
//int Person::m_a = 100;
//
//
//
//void test01() {
//	Person p;
//	p.func();
//	//p.func2();  静态成员函数也是有访问权限的
//}
//
////静态成员函数是所有对象共享的，所以也有两种访问方式
//void test02() {
//	//1.通过对象访问
//	Person p;
//	p.func();
//
//	//2.通过类名访问
//	Person::func();
//}
//int main() {
//	test01();
//	return 0;
//}