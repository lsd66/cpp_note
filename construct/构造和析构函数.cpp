////desc:构造函数和析构函数的语法初识
////creator: 20210319
////input:
////output:
////debug:
//#include<iostream>
//using  namespace std;
//class Person {
//public:
//	//1.构造函数
//	//没有返回值，不用写void
//	//函数名 与类名相同
//	//构造函数可以有参数，可以发生重载
//	//创建对象的时候，构造函数会自动调用，而且只会调用一次
//	Person() {
//		cout << "Person的构造函数调用" << endl;
//	}
//	//2.析构函数 进行清理的操作
//	//没有返回值，不写void
//	//函数名和类名相同，在名称前加~
//	//析构函数不可用有参数，不可发生重载
//	//对象在销毁前，会自动调用析构函数，而且之后调用一次
//	~Person() {
//		cout<<"Person的析造函数调用" << endl;
//	}
//};
////构造函数和析构都是必须要有的实现，如果我们自己不提供，编译器会提供一个空实现
//void test01() {
//	Person p; //在栈上的数据，test01()执行完毕后，释放这个对象
//}
//int main() {
//	Person p;
//	//system("pause");  //如果注释去掉的话，析构函数的调用在这个按任意键之后
//	return 0;
//}

