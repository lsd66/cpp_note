////desc:构造函数调用规则
////默认情况下，c++编译器至少给一个类添加三个函数
////1.默认构造函数(无参，函数体为空)  //空实现
////2.默认析构函数(无参，函数体为空)  //空实现
////3.默认拷贝构造函数，对属性进行值拷贝   //空拷贝
//
////构造函数调用规则如下:
////如果用户定义有参构造函数，c++不再提供默认无参构造，但是会提供默认拷贝构造函数
////如果用户定义拷贝构造函数，c++不会提供其他构造函数
//
//#include<iostream>
//using namespace std;
//class Person {
//public:
//	Person() {
//		cout << "默认无参构造函数" << endl;
//	}
//	Person(int a) {
//		cout << "默认有参构造函数" << endl;
//		age = a;
//	}
//	Person(const Person &p) {
//		cout << "拷贝构造函数" << endl;
//		age = p.age;
//	}
//	~Person() {
//		cout << "析构函数的调用" << endl;
//	}
//	int age;
//};
////如果用户定义有参构造函数，c++不再提供默认无参构造，但是会提供默认拷贝构造函数
//void test01() {
//	Person p(19);
//	Person p2(p);
//	cout << "p2的年龄为:" << p2.age << endl; //如果注释了拷贝构造函数，则相当于拷贝一个副本，使用默认的拷贝构造函数
//
//}
////如果用户定义拷贝构造函数，c++不会提供其他构造函数
//void test02() {
//	Person p(28);
//	Person p2(p);
//	cout << "p2的年龄为:" << p2.age << endl;
//}
//int main() {
//	test02();
//	return 0;
//}